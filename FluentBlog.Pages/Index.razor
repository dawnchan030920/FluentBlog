@using FluentBlog.Service.Page
@using FluentBlog.Model.Page
@using FluentBlog.Store.Page
@using FluentBlog.Store.Page.Action
@using FluentBlog.Store.ArticleOverview
@using FluentBlog.Store.ArticleOverviewCriteria
@using FluentBlog.Store.ArticleOverviewCriteria.Action
@using FluentBlog.Components.ArticleOverview
@using Microsoft.Fast.Components.FluentUI
@using Fluxor
@using Fluxor.Blazor.Web.Components
@inject IState<PageState> PageState
@inject IState<ArticleOverviewState> ArticleOverviewState
@inject IState<ArticleOverviewCriteriaState> ArticleOverviewCriteriaState
@inject IDispatcher Dispatcher
@inherits FluxorComponent
@page "/"

<h3>Index</h3>
<p>@PageState.Value.CurrentPage?.Tag</p>
@if (ArticleOverviewState.Value.ArticleOverviews is not null)
{
	<ul>
		@foreach (var overview in ArticleOverviewState.Value.ArticleOverviews)
		{
			<li>
				<ArticleOverview Data="@overview" />
			</li>
		}
	</ul>
}

@code {
	private PageData? page;

	protected override void OnInitialized()
	{
		page = PageDataProvider.Datas[PageDataProvider.Home];
		Dispatcher.Dispatch(new PageResetAction(page));

		base.OnInitialized();
	}
}